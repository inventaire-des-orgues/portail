# Generated by Django 2.2.13 on 2020-07-29 18:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields
import orgues.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Accessoire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Clavier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_expressif', models.BooleanField(default=False, verbose_name='Cocher si expressif')),
                ('etendue', models.CharField(blank=True, help_text='De la forme F1-G5, C1-F#5 ... ', max_length=10, null=True, validators=[orgues.models.validate_etendue])),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
            ],
            options={
                'verbose_name': 'Plan sonore',
            },
        ),
        migrations.CreateModel(
            name='Facteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Orgue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('grand_orgue', 'Grand orgue'), ('orgue_choeur', 'Orgue de chœur'), ('orgue', 'Orgue')], default='Orgue', max_length=300, verbose_name='Désignation')),
                ('codification', models.CharField(max_length=24)),
                ('references_palissy', models.CharField(blank=True, help_text='Séparer les codes par des virgules', max_length=20, null=True)),
                ('resume', models.TextField(blank=True, help_text="Présentation en quelques lignes de l'instrument                               et son originalité (max 500 caractères)", max_length=500, verbose_name='Resumé')),
                ('proprietaire', models.CharField(choices=[('commune', 'Commune'), ('etat', 'Etat'), ('association_culturelle', 'Association culturelle'), ('diocese', 'Diocèse'), ('paroisse', 'Paroisse')], default='commune', max_length=20)),
                ('organisme', models.CharField(blank=True, max_length=100, null=True, verbose_name="Organisme auquel s'adresser")),
                ('lien_reference', models.URLField(blank=True, max_length=300, null=True, verbose_name='Lien de référence')),
                ('is_polyphone', models.BooleanField(default=False, verbose_name='Orgue polyphone de la manufacture Debierre ?')),
                ('etat', models.CharField(blank=True, choices=[('bon', 'Très bon ou bon : tout à fait jouable'), ('altere', 'Altéré : difficilement jouable'), ('degrade', 'Dégradé ou en ruine : injouable')], max_length=20, null=True)),
                ('elevation', models.CharField(blank=True, choices=[('sol', 'Au sol'), ('tribune', 'En tribune')], max_length=20, null=True, verbose_name='Elévation')),
                ('buffet', models.TextField(blank=True, help_text='Description du buffet et de son état.', null=True, verbose_name='Description buffet')),
                ('console', models.TextField(blank=True, help_text="Description de la console (ex: en fenêtre,                                séparée organiste tourné vers l'orgue ...).", null=True, verbose_name='Description console')),
                ('commentaire_admin', models.TextField(blank=True, help_text='Commentaire uniquement visible par les rédacteurs', null=True, verbose_name='Commentaire rédacteurs')),
                ('edifice', models.CharField(max_length=300)),
                ('adresse', models.CharField(blank=True, max_length=300, null=True)),
                ('commune', models.CharField(max_length=100)),
                ('code_insee', models.CharField(max_length=5)),
                ('ancienne_commune', models.CharField(blank=True, max_length=100, null=True)),
                ('departement', models.CharField(max_length=50, verbose_name='Département')),
                ('code_departement', models.CharField(max_length=3, validators=[django.core.validators.RegexValidator(message='Renseigner un code de département valide', regex='^(97[12346]|0[1-9]|[1-8][0-9]|9[0-5]|2[AB])$')], verbose_name='Code département')),
                ('region', models.CharField(max_length=50, verbose_name='Région')),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('osm_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='Type open street map')),
                ('osm_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='Id open street map')),
                ('diapason', models.CharField(blank=True, help_text='Hauteur en Hertz du A2 joué par le prestant 4', max_length=15, null=True)),
                ('sommiers', models.TextField(blank=True, null=True)),
                ('soufflerie', models.TextField(blank=True, null=True)),
                ('transmission_notes', models.CharField(blank=True, choices=[('mecanique', 'Mécanique'), ('mecanique_suspendue', 'Mécanique suspendue'), ('mecanique_balanciers', 'Mécanique à balanciers'), ('mecanique_barker', 'Mécanique Barker'), ('pneumatique', 'Pneumatique'), ('electrique', 'Electrique'), ('electrique_proportionnelle', 'Electrique proportionnelle'), ('electro_pneumatique', 'Electro-pneumatique')], max_length=30, null=True)),
                ('transmission_commentaire', models.CharField(blank=True, help_text='Max 100 caractères', max_length=100, null=True)),
                ('tirage_jeux', models.CharField(blank=True, choices=[('mecanique', 'Mécanique'), ('pneumatique', 'Pneumatique'), ('electrique', 'Electrique'), ('electro_pneumatique', 'Electro-pneumatique')], max_length=20, null=True, verbose_name='Tirage des jeux')),
                ('tirage_commentaire', models.CharField(blank=True, help_text='Max 100 caractères', max_length=100, null=True)),
                ('commentaire_tuyauterie', models.TextField(blank=True, verbose_name='Description de la tuyauterie')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('slug', models.SlugField(max_length=255)),
                ('completion', models.IntegerField(default=False, editable=False)),
                ('keywords', models.TextField()),
                ('resume_clavier', models.CharField(blank=True, editable=False, max_length=30, null=True)),
                ('accessoires', models.ManyToManyField(blank=True, to='orgues.Accessoire')),
                ('facteurs', models.ManyToManyField(blank=True, editable=False, to='orgues.Facteur')),
                ('updated_by_user', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
                'permissions': [('change_localisation', "Peut modifier les informations de localisation d'un orgue")],
            },
        ),
        migrations.CreateModel(
            name='TypeClavier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Type de clavier',
                'verbose_name_plural': 'Types de claviers',
            },
        ),
        migrations.CreateModel(
            name='TypeJeu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('hauteur', models.CharField(help_text='La hauteur est indiquée par convention en pieds, en chiffres arabes, sans précision de l\'unité. La nombre de rangs des fournitures, plein-jeux, cornet, etc. est indiqué en chiffres romains, sans précision du terme "rangs" (ni "rgs").', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Types de jeux',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('disque', 'Disque'), ('web', 'Web'), ('ouvrage', 'Ouvrage'), ('video', 'Video')], max_length=20, verbose_name='Type de source')),
                ('description', models.CharField(max_length=100, verbose_name='Description de la source')),
                ('lien', models.CharField(max_length=100, verbose_name='Lien')),
                ('orgue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sources', to='orgues.Orgue')),
            ],
        ),
        migrations.CreateModel(
            name='Jeu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentaire', models.CharField(blank=True, max_length=200, null=True)),
                ('configuration', models.CharField(blank=True, choices=[('basse', 'Basse'), ('dessus', 'Dessus')], max_length=20, null=True)),
                ('clavier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jeux', to='orgues.Clavier')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jeux', to='orgues.TypeJeu')),
            ],
            options={
                'verbose_name_plural': 'Jeux',
            },
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=orgues.models.chemin_image)),
                ('is_principale', models.BooleanField(default=False, editable=False)),
                ('credit', models.CharField(blank=True, max_length=200, null=True)),
                ('thumbnail_principale', imagekit.models.fields.ProcessedImageField(upload_to=orgues.models.chemin_image)),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('orgue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='orgues.Orgue')),
            ],
        ),
        migrations.CreateModel(
            name='Fichier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to=orgues.models.chemin_fichier, verbose_name='Fichier')),
                ('description', models.CharField(max_length=100, verbose_name='Nom de fichier à afficher')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Update date')),
                ('orgue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='orgues.Orgue')),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.IntegerField(verbose_name='Année')),
                ('type', models.CharField(choices=[('construction', 'Construction'), ('reconstruction', 'Reconstruction'), ('destruction', 'Destruction'), ('restauration', 'Restauration'), ('deplacement', 'Déplacement'), ('relevage', 'Relevage'), ('disparition', 'Disparition'), ('degats', 'Dégâts'), ('classement_mh', 'Classement au titre des monuments historiques'), ('inscription_mh', 'Inscription au titre des monuments historiques')], max_length=20)),
                ('resume', models.TextField(blank=True, help_text='700 caractères max', max_length=700, null=True)),
                ('facteurs', models.ManyToManyField(blank=True, related_name='evenements', to='orgues.Facteur')),
                ('orgue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evenements', to='orgues.Orgue')),
            ],
            options={
                'ordering': ['annee'],
            },
        ),
        migrations.AddField(
            model_name='clavier',
            name='orgue',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='claviers', to='orgues.Orgue'),
        ),
        migrations.AddField(
            model_name='clavier',
            name='type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='orgues.TypeClavier'),
        ),
    ]
